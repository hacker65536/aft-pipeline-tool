name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22', '1.23', '1.24']

    steps:
    - uses: actions/checkout@v5.0.0

    - name: Set up Go
      uses: actions/setup-go@v6.0.0
      with:
        go-version: ${{ matrix.go-version }}

    - name: Cache Go modules
      uses: actions/cache@v4.2.4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Run tests with race detector
      run: go test -race -short ./...

    - name: Run tests with coverage
      run: go test -v -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5.5.1
      with:
        files: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5.0.0

    - name: Set up Go
      uses: actions/setup-go@v6.0.0
      with:
        go-version: '1.24'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v8.0.0
      with:
        version: latest

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v5.0.0
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v6.0.0
      with:
        go-version: '1.24'

    - name: Build
      run: make build

    - name: Test version command
      run: ./aft-pipeline-tool version

    - name: Build for multiple platforms
      run: make build-all

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4.6.2
      with:
        name: binaries
        path: build/
